/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: message.proto */

#ifndef PROTOBUF_C_message_2eproto__INCLUDED
#define PROTOBUF_C_message_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Com1 Com1;
typedef struct _Com4 Com4;


/* --- enums --- */


/* --- messages --- */

struct _Com1 {
    ProtobufCMessage base;
    char *nomefile;
    char *testoaggiuntivo;
    int32_t command;
};
#define COM1__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&com1__descriptor) \
    , NULL, NULL, 0 }


struct _Com4 {
    ProtobufCMessage base;
    char *nomefile;
    char *testoaggiuntivo;
    int32_t command;
    char *directory;
};
#define COM4__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&com4__descriptor) \
    , NULL, NULL, 0, NULL }


/* Com1 methods */
void com1__init
        (Com1 *message);
size_t com1__get_packed_size
        (const Com1 *message);
size_t com1__pack
        (const Com1 *message,
         uint8_t *out);
size_t com1__pack_to_buffer
        (const Com1 *message,
         ProtobufCBuffer *buffer);
Com1 *
com1__unpack
        (ProtobufCAllocator *allocator,
         size_t len,
         const uint8_t *data);

void com1__free_unpacked
        (Com1 *message,
         ProtobufCAllocator *allocator);
/* Com4 methods */
void com4__init
        (Com4 *message);
size_t com4__get_packed_size
        (const Com4 *message);
size_t com4__pack
        (const Com4 *message,
         uint8_t *out);
size_t com4__pack_to_buffer
        (const Com4 *message,
         ProtobufCBuffer *buffer);
Com4 *
com4__unpack
        (ProtobufCAllocator *allocator,
         size_t len,
         const uint8_t *data);

void com4__free_unpacked
        (Com4 *message,
         ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Com1_Closure)
        (const Com1 *message,
         void *closure_data);
typedef void (*Com4_Closure)
        (const Com4 *message,
         void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor com1__descriptor;
extern const ProtobufCMessageDescriptor com4__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_message_2eproto__INCLUDED */
