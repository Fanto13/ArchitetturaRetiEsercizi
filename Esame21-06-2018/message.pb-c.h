/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: message.proto */

#ifndef PROTOBUF_C_message_2eproto__INCLUDED
#define PROTOBUF_C_message_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _RichiestaClient RichiestaClient;
typedef struct _RispostaServer RispostaServer;


/* --- enums --- */


/* --- messages --- */

struct _RichiestaClient {
    ProtobufCMessage base;
    char *nomefile;
};
#define RICHIESTA_CLIENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&richiesta_client__descriptor) \
    , NULL }


struct _RispostaServer {
    ProtobufCMessage base;
    int32_t dim;
};
#define RISPOSTA_SERVER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&risposta_server__descriptor) \
    , 0 }


/* RichiestaClient methods */
void richiesta_client__init
        (RichiestaClient *message);

size_t richiesta_client__get_packed_size
        (const RichiestaClient *message);

size_t richiesta_client__pack
        (const RichiestaClient *message,
         uint8_t *out);

size_t richiesta_client__pack_to_buffer
        (const RichiestaClient *message,
         ProtobufCBuffer *buffer);

RichiestaClient *
richiesta_client__unpack
        (ProtobufCAllocator *allocator,
         size_t len,
         const uint8_t *data);

void richiesta_client__free_unpacked
        (RichiestaClient *message,
         ProtobufCAllocator *allocator);

/* RispostaServer methods */
void risposta_server__init
        (RispostaServer *message);

size_t risposta_server__get_packed_size
        (const RispostaServer *message);

size_t risposta_server__pack
        (const RispostaServer *message,
         uint8_t *out);

size_t risposta_server__pack_to_buffer
        (const RispostaServer *message,
         ProtobufCBuffer *buffer);

RispostaServer *
risposta_server__unpack
        (ProtobufCAllocator *allocator,
         size_t len,
         const uint8_t *data);

void risposta_server__free_unpacked
        (RispostaServer *message,
         ProtobufCAllocator *allocator);

/* --- per-message closures --- */

typedef void (*RichiestaClient_Closure)
        (const RichiestaClient *message,
         void *closure_data);

typedef void (*RispostaServer_Closure)
        (const RispostaServer *message,
         void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor richiesta_client__descriptor;
extern const ProtobufCMessageDescriptor risposta_server__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_message_2eproto__INCLUDED */
